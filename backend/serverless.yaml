service: fault-tolerant-system
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-central-1
  environment:
    TASKS_TABLE: TasksTable
    TASKS_QUEUE_URL:
      Ref: TasksQueue

package:
  individually: true

plugins:
  - serverless-esbuild
  - serverless-iam-roles-per-function

custom:
  esbuild:
    bundle: true
    format: cjs
    target: node20
    sourcemap: true
    platform: node
    concurrency: 10
    outdir: .esbuild

functions:
  submitTask:
    handler: src/submitTask.handler
    events:
      - http:
          path: tasks
          method: post
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource:
          - arn:aws:dynamodb:${self:provider.region}:*:table/TasksTable
      - Effect: Allow
        Action:
          - sqs:SendMessage
        Resource:
          - arn:aws:sqs:${self:provider.region}:*:*

  processTask:
    handler: src/processTask.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - TasksQueue
              - Arn
          batchSize: 1
          functionResponseType: ReportBatchItemFailures
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:UpdateItem
        Resource:
          - arn:aws:dynamodb:${self:provider.region}:*:table/TasksTable

  getTasks:
    handler: src/getTasks.handler
    events:
      - http:
          path: tasks
          method: get
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource:
          - arn:aws:dynamodb:${self:provider.region}:*:table/TasksTable

  dlqMonitor:
    handler: src/dlqMonitor.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - TasksDLQ
              - Arn
          batchSize: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource:
          - arn:aws:dynamodb:${self:provider.region}:*:table/TasksTable
      - Effect: Allow
        Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
        Resource: "*"

resources:
  Resources:
    TasksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TasksTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    TasksDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: tasks-dlq

    TasksQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: tasks-queue
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - TasksDLQ
              - Arn
          maxReceiveCount: 3
